function init(self)
	msg.post("@render:", "use_camera_projection")

	local test_group_id = daabbcc.new_group(daabbcc.UPDATE_FULLREBUILD)



	local collision_bits = {
		GROUND = 0x00000001,
		TEAM1 = 0x00000002,
		TEAM2 = 0x00000004,
		TEAM3 = 0x00000008,

		ALL = bit.bnot(0)
	}

	local x = 0
	local y = 0
	local w = 100
	local h = 100

	--categoryBits
	local team1_proxy_id = daabbcc.insert_aabb(test_group_id, x, y, w, h, collision_bits.TEAM1)
	local team2_proxy_id = daabbcc.insert_aabb(test_group_id, x, y, w, h, collision_bits.TEAM1)
	local team3_proxy_id = daabbcc.insert_aabb(test_group_id, x, y, w, h, collision_bits.TEAM1)

	print('team1_proxy_id: ', team1_proxy_id)
	print('team2_proxy_id: ', team2_proxy_id)
	print('team3_proxy_id: ', team3_proxy_id)


	--maskBits
	local mask_bits = bit.bor(collision_bits.TEAM1)
	print(mask_bits)
	local result, count = daabbcc.query_aabb(test_group_id, x, y, w, h, mask_bits)
	print('-----:')
	print('count:', count)
	if result then
		for i = 1, count do
			print(result[i])
		end
	end
end
